/*

Copyright 2018 technicianted

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

*/

syntax = "proto3";

package gst_transformer.service;

// predefined pipeline specs
message PipelineStruct {
    // unique id (name) for this pipeline on the service
    string id = 1;
    // pipeline gst specs
    string specs = 2;
}

// service configurations parameters
message ServiceParametersStruct {
    // allow clients to send pipeline specs with each request, default off
    bool allow_dynamic_pipelines = 1;
    // set a maximum rate clients are allowed to use, default any
    double max_rate = 2;
    // set maximum media length clients are allowed to use, default unlimited
    uint64 max_length_millis = 3;
    // set maximum tolerance bytes before a stream starts, default unlimited
    uint64 max_start_tolerance_bytes = 4;
    // set maximum time allowed before media payloads, default unlimited
    uint64 max_read_timeout_millis = 5;
    // set maximum bytes size allowed to be set by the clients, default unlimited
    uint64 max_pipeline_output_buffer = 6;

    // predefined pipelines
    map<string, PipelineStruct> pipelines = 16;
}
